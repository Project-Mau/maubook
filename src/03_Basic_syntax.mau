:pelican.title:Basic Syntax

[condition="if:mau.pelican:"]
----
:pelican.series:maubook
:pelican.series_index:3
:pelican.template:doc
----

[id=basic-syntax]
= {pelican.title}

[*quote]
----
Some of the newer ones are having trouble because they never really mastered some basic techniques, but theyâ€™re working hard and improving.
----
Orson Scott Card, _Ender's Game_ (1985)


This and the following chapters will give you an overview of the basic syntax for paragraphs, styles, and other inline elements like links and images. If you are familiar with either Markdown or Asciidoctor none of these will be a surprise to you, but this documentation will describe everything assuming the reader doesn't know any markup language.

The documentation will refer to generic input and output, meaning respectively the Mau source and the final result.

== Typographic conventions

The source code in a block will be shown like this

. Mau source
[*source]
----
This is Mau source code
----

[condition="if:mau.visitor.format:html"]
%%%%
If useful, the resulting HTML code will be shown in a block like this

. HTML output
[*source,html]
----
<p>The resulting HTML code</p>
----

The rendered version of the resulting HTML will be shown with an aside like
%%%%

[condition="if:mau.visitor.format:tex"]
----
As this book is formatted using LaTeX, the rendered version won't use the HTML code but its LaTeX counterpart. The rendered version will be shown with an aside like
----

[*rendered]
----
This is the rendered output
----

[condition="if:mau.visitor.format:html"]
----
Please keep in mind that the rendered version of the code in this documentation is rendered using this website's CSS, so some of the styles might differ when you open your output file with your browser.
----

Remember that both Markdown and Asciidoctor have a fixed rendering, while the output in Mau is ruled by templates. In the first chapters what you will see in the rendered boxes is the result of Mau's default templates, but those can be overridden at any time, as detailed by later chapters.

== Paragraphs

The simplest element in Mau is a line of text that forms a paragraph

. Mau source
[*source]
----
This is a line of text.
----

[*rendered]
----
This is a line of text.
----

Adjacent lines of text are automatically joined into a single paragraph. For example

. Mau source
[*source]
----
This is a sentence. And another sentence.
----

and 

. Mau source
[*source]
----
This is a sentence.
And another sentence.
----

will both be rendered as

[*rendered]
----
This is a sentence.
And another sentence.
----

To separate paragraphs you need to insert one or more empty lines. For example

. Mau source
[*source]
----
This is a sentence.

And another sentence.
----

and 

. Mau source
[*source]
----
This is a sentence.



And another sentence.
----

will both be rendered as

[*rendered]
----
This is a sentence.

And another sentence.
----

== Comments

Mau supports single-line and multi-line comments. A single line comment uses double slashes

. Mau source
[*source]
----
This is a sentence.

And another sentence.

// This is a comment and won't be rendered
----

[*rendered]
----
This is a sentence.

And another sentence.

// This is a comment and won't be rendered
----

while multi-line comments are surrounded by four slashes on a separate line

. Mau source
[*source]
----
This is a sentence.

And another sentence.

////
This is also a comment
but it's spread on
multiple lines
for fun and to be a
little more readable
////
----

[*rendered]
----
This is a sentence.

And another sentence.

////
This is also a comment
but it's spread on
multiple lines
for fun and to be a
little more readable
////
----

== Include other files

You can include other files through the directive `#include`. Directives are special commands that are processed before the Mau code is properly parsed

. Mau source
[*source]
----
\::#include:/path/to/file.mau
----

Since the inclusion happens during the very first stages of the processing, you can include files anywhere in the document. The directive, however, cannot be surrounded by other text. Therefore, you cannot include the content of a file in the middle of a paragraph or in a header.

::footnotes:


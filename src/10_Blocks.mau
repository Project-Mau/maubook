[condition="if:mau.pelican:"]
----
:pelican.title:Blocks
:pelican.date:2021-10-19 12:30:00 +0100
:pelican.slug:maubook-blocks
:pelican.series:Mau - A template-based markup language
:pelican.series_index:10
:pelican.image:maubook/card
----

[condition="if:mau.chapter_headers:"]
----
= Blocks
----

[quote]
----
The chamber was lit by a wide shaft high in the further eastern wall; it slanted upwards and, far above, a small square patch of blue sky could be seen. The light of the shaft fell directly on a table in the middle of the room: a single oblong block, about two feet high, upon which was laid a great slab of white stone.
----
J.R.R. Tolkien, "The Lord of the Rings - The Fellowship of the Ring" (1954)

Mau has the concept of blocks, which are parts of the text delimited by fences

. Mau source
[source]
++++
----
This is a block
----
++++

You can use any sequence of 4 identical characters to delimit a block, provided this doesn't clash with other syntax like the one used for headers or for comments

. Mau source
[source]
----
++++
This is a block
++++

%%%%
This is another block
%%%%
----

If you need to insert 4 identical characters on a line for some reasons, you have to escape the first of them

. Mau source
[source]
----
These are paragraphs.

\++++

Just standard paragraphs.
----

[rendered]
----
These are paragraphs.

\++++

Just standard paragraphs.
----

---

Blocks isolate the text they contain and can apply special formatting rules to it. The idea behind blocks is that the text inside them can be formatted using special templates that apply to the whole content and not only to a single element such as a paragraph. They are therefore useful to create annotations and asides, to include source code, or to implement custom processing such as isolating headers from the main document.

In this and the next chapters we will explore blocks in depth and learn about all their features. As we will see, they can be heavily customised, but for now let's consider the default rendering of a block in HTML

. Mau source
[source]
++++
----
This is a block
----
++++

. HTML output
[source,html]
----
<div>
  <div class="content">
    <p>This is a block</p>
  </div>
</div>
----

In this manual, the default rendering of a block is the following

[rendered]
%%%%
This paragraph is contained in a default block.
%%%%

== Block titles

Blocks can have titles, created before the block by a line starting with a dot 

. Mau source
[source]
++++
. The title
----
This is a block
----
++++

. HTML output
[source,html]
----
<div>
  <div class="title">The title</div>
  <div class="content">
    <p>This is a block</p>
  </div>
</div>
----

[condition="if:mau.output_format:html"]
----
[rendered]
++++
. The title
%%%%
This is a block
%%%%
++++
----

The space between the dot and the title is optional

. Mau source
[source]
++++
.The title
----
This is a block
----
++++

== Block attributes

Blocks can have attributes, specified between square brackets before the opening fence. If attributes are specified, the first attribute is always the type of the block.

. Mau source
[source]
++++
[aside]
----
This is a block of type `aside`
----
++++

. HTML output
[source,html]
----
<div class="aside">
  <div class="content">
    <p>This is a block of type <code>aside</code></p>
  </div>
</div>
----

[condition="if:mau.output_format:html"]
----
[rendered]
++++
[aside]
%%%%
This is a block of type `aside`
%%%%
++++
----

Blocks without an explicit type have the type `default` so the following two definitions give the same result

. Mau source
[source]
++++
----
This is a default block
----

[default]
----
This is a default block
----
++++

Types are important as they can render the block in different ways. In the next chapter we will explore built-in blocks, and later we will discuss templates that allow us to further customise how blocks are rendered.

---

You can specify title and attributes in any order.

. Mau source
[source]
++++
. Title of the block
[aside]
----
This is a block of type `aside` and a title
----

[aside]
. Title of the block
----
This is a block of type `aside` and a title
----
++++

Title and attributes are consumed by the first block that appears after them, so they don't need to be adjacent to it.

. Mau source
[source]
++++
. Title of the block

[aside]

----
This is a block of type `aside`
----
++++

== Secondary content

Blocks have the concept of _secondary content_, which is any paragraph that is adjacent to the closing fence. This paragraph is included in the block metadata and used according to the type of block (see the chapter about source code blocks, for example). The default block simply discards that content

. Mau source
[source]
++++
----
Content of the block
----
Secondary content that won't be in the output

This is not part of the block
++++


[rendered]
++++
----
Content of the block
----
Secondary content that won't be in the output

This is not part of the block
++++

::footnotes:
